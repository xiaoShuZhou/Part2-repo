{"ast":null,"code":"var _jsxFileName = \"/Users/sean/programming/phonebook/phonebook/src/App.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport Notification from './components/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [notification, setNotification] = useState(null);\n\n  // get all data from http://localhost:3004/persons by using axios\n  useEffect(() => {\n    axios.get('http://localhost:3004/persons').then(response => {\n      setPersons(response.data);\n    });\n  }, []);\n\n  //add new person to http://localhost:3004/persons by using axios\n\n  const addPerson = event => {\n    event.preventDefault();\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    };\n    //check if the person's information is already in the phonebook\n    if (persons.some(person => person.name === newName)) {\n      const person = persons.find(person => person.name === newName);\n      updateNumber(person.id);\n    }\n    axios.post('http://localhost:3004/persons', newPerson).then(response => {\n      setPersons(persons.concat(response.data));\n      setNotification({\n        text: `${newName}'s number is added.`,\n        type: 'success'\n      });\n      setNewName('');\n      setNewNumber('');\n    });\n  };\n\n  //delete person from http://localhost:3004/persons by using axios, \n  //and confirm the action from the user by using the window.confirm method\n  const deletePerson = id => {\n    const person = persons.find(person => person.id === id);\n    if (window.confirm(`Delete ${person.name}?`)) {\n      axios.delete(`http://localhost:3004/persons/${id}`).then(response => {\n        setPersons(persons.filter(person => person.id !== id));\n      });\n    }\n  };\n\n  //use the HTTP PUT method for updating the phone number,\n  //if a number is added to an already existing user, the new number will replace the old number\n  //If the person's information is already in the phonebook, the application can confirm the action from the user\n  const updateNumber = id => {\n    const person = persons.find(person => person.id === id);\n    if (window.confirm(`${person.name} is already added to phonebook, replace the old number with a new one?`)) {\n      const changedPerson = {\n        ...person,\n        number: newNumber\n      };\n      axios.put(`http://localhost:3004/persons/${id}`, changedPerson).then(response => {\n        setPersons(persons.map(person => person.id !== id ? person : response.data));\n        setNewName('');\n        setNewNumber('');\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      notification: notification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"filter shown with \", /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addPerson,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newName,\n          onChange: event => setNewName(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"number: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newNumber,\n          onChange: event => setNewNumber(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: persons.map(person => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [person.name, \" \", person.number, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deletePerson(person.id),\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this)]\n      }, person.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 32\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"pcEylYA+p4+9JBKRKShqcH3I368=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","React","useState","useEffect","Notification","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","notification","setNotification","get","then","response","data","addPerson","event","preventDefault","newPerson","name","number","some","person","find","updateNumber","id","post","concat","text","type","deletePerson","window","confirm","delete","filter","changedPerson","put","map","target","value"],"sources":["/Users/sean/programming/phonebook/phonebook/src/App.js"],"sourcesContent":["import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\n\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [notification, setNotification] = useState(null)\n\n// get all data from http://localhost:3004/persons by using axios\n  useEffect(() => {\n    axios\n      .get('http://localhost:3004/persons')\n      .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n\n  //add new person to http://localhost:3004/persons by using axios\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const newPerson= {\n      name: newName,\n      number: newNumber\n    }\n    //check if the person's information is already in the phonebook\n    if (persons.some(person => person.name === newName)) {\n      const person = persons.find(person => person.name === newName)\n      updateNumber(person.id)\n    }\n    axios\n      .post('http://localhost:3004/persons', newPerson)\n      .then(response => {\n        setPersons(persons.concat(response.data))\n        setNotification({\n          text: `${newName}'s number is added.`,\n          type: 'success'\n        })  \n        setNewName('')\n        setNewNumber('')\n      })\n\n  }\n\n  //delete person from http://localhost:3004/persons by using axios, \n  //and confirm the action from the user by using the window.confirm method\n  const deletePerson = (id) => {\n    const person = persons.find(person => person.id === id)\n    if (window.confirm(`Delete ${person.name}?`)) {\n      axios\n        .delete(`http://localhost:3004/persons/${id}`)\n        .then(response => {\n          setPersons(persons.filter(person => person.id !== id))\n        })\n    }\n  }\n\n  //use the HTTP PUT method for updating the phone number,\n  //if a number is added to an already existing user, the new number will replace the old number\n  //If the person's information is already in the phonebook, the application can confirm the action from the user\n  const updateNumber = (id) => {\n    const person = persons.find(person => person.id === id)\n    if (window.confirm(`${person.name} is already added to phonebook, replace the old number with a new one?`)) {\n      const changedPerson = { ...person, number: newNumber }\n      axios\n        .put(`http://localhost:3004/persons/${id}`, changedPerson)\n        .then(response => {\n          setPersons(persons.map(person => person.id !== id ? person : response.data))\n          setNewName('')\n          setNewNumber('')\n        })\n    }\n  }\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification= {notification}/>\n\n      <div>\n        <form>\n          <div>\n            filter shown with <input />\n          </div>\n        </form>\n      </div>\n\n      <form onSubmit={addPerson}>\n        <div>\n          name: <input value={newName} onChange={(event) => setNewName(event.target.value)} />\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={(event) => setNewNumber(event.target.value)} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n\n      <h2>Numbers</h2>\n      <div>\n        {persons.map(person => <p key={person.name}>{person.name} {person.number}\n        <button onClick={() => deletePerson(person.id)}>delete</button>\n        </p>)}\n      </div>\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}