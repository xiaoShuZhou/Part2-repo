{"ast":null,"code":"var _jsxFileName = \"/Users/sean/programming/phonebook/phonebook/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport Notification from './components/Notification';\nimport personService from './services/persons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [filter, setFilter] = useState('');\n  const [notification, setNotification] = useState(null);\n\n  // get all data from http://localhost:3004/persons by using axios\n  useEffect(() => {\n    personService.getAll().then(response => {\n      setPersons(response.data);\n    });\n  }, []);\n\n  //add new person to http://localhost:3004/persons by using axios\n\n  const addPerson = event => {\n    event.preventDefault();\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    };\n    //check if the person's information is already in the phonebook\n    if (persons.some(person => person.name.toLowerCase() === newName.toLowerCase())) {\n      const person = persons.find(person => person.name.toLowerCase() === newName.toLowerCase());\n      updateNumber(person.id);\n      return;\n    }\n    personService.create(newPerson).then(response => {\n      setPersons(persons.concat(response.data));\n      setNewName('');\n      setNewNumber('');\n      //show notification for 3 seconds\n      setNotification({\n        text: `${newPerson.name}'s number is added.`,\n        type: 'success'\n      });\n      setTimeout(() => {\n        setNotification(null);\n      }, 3000);\n    });\n  };\n\n  //delete person from http://localhost:3004/persons by using axios, \n  //and confirm the action from the user by using the window.confirm method\n  const deletePerson = id => {\n    const person = persons.find(person => person.id === id);\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService.remove(id).then(response => {\n        setPersons(persons.filter(person => person.id !== id));\n      });\n    }\n  };\n\n  //use the HTTP PUT method for updating the phone number,\n  //if a number is added to an already existing user, the new number will replace the old number\n  //If the person's information is already in the phonebook, the application can confirm the action from the user\n  const updateNumber = id => {\n    const person = persons.find(person => person.id === id);\n    if (window.confirm(`${person.name} is already added to phonebook, replace the old number with a new one?`)) {\n      const changedPerson = {\n        name: newName,\n        number: newNumber\n      };\n      personService.update(id, changedPerson).then(response => {\n        setPersons(persons.map(person => person.id !== id ? person : response.data));\n        setNewName('');\n        setNewNumber('');\n\n        //show notification for 3 seconds\n        setNotification({\n          text: `${changedPerson.name}'s number is updated.`,\n          type: 'success'\n        });\n        setTimeout(() => {\n          setNotification(null);\n        }, 3000);\n      }).catch(error => {\n        setNewName('');\n        setNewNumber('');\n        //show notification for 3 seconds\n        setNotification({\n          text: `${changedPerson.name}'s information has already been removed from server.`,\n          type: 'error'\n        });\n        setTimeout(() => {\n          setNotification(null);\n        }, 3000);\n      });\n    }\n  };\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  //controlled filter component\n  const handleFilterChange = event => {\n    setFilter(event.target.value);\n  };\n  const filteredPersons = persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      notification: notification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      filter: filter,\n      handleFilterChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), \"\\u300A\", /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: filteredPersons.map(person => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [person.name, \" \", person.number, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deletePerson(person.id),\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, person.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 40\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"3gBPgn+UIBaosBp40VEDyQAAv/E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Filter","Notification","personService","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setFilter","notification","setNotification","getAll","then","response","data","addPerson","event","preventDefault","newPerson","name","number","some","person","toLowerCase","find","updateNumber","id","create","concat","text","type","setTimeout","deletePerson","window","confirm","remove","changedPerson","update","map","catch","error","handleNameChange","target","value","handleNumberChange","handleFilterChange","filteredPersons","includes"],"sources":["/Users/sean/programming/phonebook/phonebook/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\n\nimport personService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [notification, setNotification] = useState(null)\n\n  // get all data from http://localhost:3004/persons by using axios\n  useEffect(() => {\n    personService.getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n\n  //add new person to http://localhost:3004/persons by using axios\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n    //check if the person's information is already in the phonebook\n    if (persons.some(person => person.name.toLowerCase() === newName.toLowerCase())) {\n      const person = persons.find(person => person.name.toLowerCase() === newName.toLowerCase())\n      updateNumber(person.id)\n      return\n    }\n    personService.create(newPerson)\n      .then(response => {\n        setPersons(persons.concat(response.data))\n        setNewName('')\n        setNewNumber('')\n        //show notification for 3 seconds\n        setNotification({\n          text: `${newPerson.name}'s number is added.`,\n          type: 'success'\n        })\n        setTimeout(() => {\n          setNotification(null)\n        }, 3000)\n      }\n      )\n  }\n\n  //delete person from http://localhost:3004/persons by using axios, \n  //and confirm the action from the user by using the window.confirm method\n  const deletePerson = (id) => {\n    const person = persons.find(person => person.id === id)\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService.remove(id)\n        .then(response => {\n          setPersons(persons.filter(person => person.id !== id))\n        })\n    }\n  }\n\n  //use the HTTP PUT method for updating the phone number,\n  //if a number is added to an already existing user, the new number will replace the old number\n  //If the person's information is already in the phonebook, the application can confirm the action from the user\n  const updateNumber = (id) => {\n    const person = persons.find(person => person.id === id)\n    if (window.confirm(`${person.name} is already added to phonebook, replace the old number with a new one?`)) {\n      const changedPerson = { name: newName, number: newNumber }\n      personService.update(id, changedPerson)\n        .then(response => {\n          setPersons(persons.map(person => person.id !== id ? person : response.data))\n          setNewName('')\n          setNewNumber('')\n\n          //show notification for 3 seconds\n          setNotification({\n            text: `${changedPerson.name}'s number is updated.`,\n            type: 'success'\n          })\n          setTimeout(() => {\n            setNotification(null)\n          }, 3000)\n        })\n        .catch(error => {\n          setNewName('')\n          setNewNumber('')\n          //show notification for 3 seconds\n          setNotification({\n            text: `${changedPerson.name}'s information has already been removed from server.`,\n            type: 'error'\n          })\n          setTimeout(() => {\n            setNotification(null)\n          }, 3000)\n        }) \n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  //controlled filter component\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const filteredPersons = persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n      <Filter filter={filter} handleFilterChange={handleFilterChange} />\n      《\n\n      {/* <div>\n        <form onSubmit={addPerson}>\n          <div>\n            name: <input value={newName} onChange={(event) => setNewName(event.target.value)} />\n          </div>\n          <div>\n            number: <input value={newNumber} onChange={(event) => setNewNumber(event.target.value)} />\n          </div>\n          <div>\n            <button type=\"submit\">add</button>\n          </div>\n        </form>\n      </div> */}\n\n      <h2>Numbers</h2>\n      <div>\n        {filteredPersons.map(person => <p key={person.name}>{person.name} {person.number}\n          <button onClick={() => deletePerson(person.id)}>delete</button></p>)}\n      </div>\n    </div>\n  )\n}\n\nexport default App"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,YAAY,MAAM,2BAA2B;AAEpD,OAAOC,aAAa,MAAM,oBAAoB;AAAA;AAE9C,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACAC,SAAS,CAAC,MAAM;IACdG,aAAa,CAACY,MAAM,EAAE,CACnBC,IAAI,CAACC,QAAQ,IAAI;MAChBX,UAAU,CAACW,QAAQ,CAACC,IAAI,CAAC;IAC3B,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA,MAAMC,SAAS,GAAIC,KAAK,IAAK;IAC3BA,KAAK,CAACC,cAAc,EAAE;IACtB,MAAMC,SAAS,GAAG;MAChBC,IAAI,EAAEhB,OAAO;MACbiB,MAAM,EAAEf;IACV,CAAC;IACD;IACA,IAAIJ,OAAO,CAACoB,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACH,IAAI,CAACI,WAAW,EAAE,KAAKpB,OAAO,CAACoB,WAAW,EAAE,CAAC,EAAE;MAC/E,MAAMD,MAAM,GAAGrB,OAAO,CAACuB,IAAI,CAACF,MAAM,IAAIA,MAAM,CAACH,IAAI,CAACI,WAAW,EAAE,KAAKpB,OAAO,CAACoB,WAAW,EAAE,CAAC;MAC1FE,YAAY,CAACH,MAAM,CAACI,EAAE,CAAC;MACvB;IACF;IACA3B,aAAa,CAAC4B,MAAM,CAACT,SAAS,CAAC,CAC5BN,IAAI,CAACC,QAAQ,IAAI;MAChBX,UAAU,CAACD,OAAO,CAAC2B,MAAM,CAACf,QAAQ,CAACC,IAAI,CAAC,CAAC;MACzCV,UAAU,CAAC,EAAE,CAAC;MACdE,YAAY,CAAC,EAAE,CAAC;MAChB;MACAI,eAAe,CAAC;QACdmB,IAAI,EAAG,GAAEX,SAAS,CAACC,IAAK,qBAAoB;QAC5CW,IAAI,EAAE;MACR,CAAC,CAAC;MACFC,UAAU,CAAC,MAAM;QACfrB,eAAe,CAAC,IAAI,CAAC;MACvB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CACA;EACL,CAAC;;EAED;EACA;EACA,MAAMsB,YAAY,GAAIN,EAAE,IAAK;IAC3B,MAAMJ,MAAM,GAAGrB,OAAO,CAACuB,IAAI,CAACF,MAAM,IAAIA,MAAM,CAACI,EAAE,KAAKA,EAAE,CAAC;IACvD,IAAIO,MAAM,CAACC,OAAO,CAAE,UAASZ,MAAM,CAACH,IAAK,GAAE,CAAC,EAAE;MAC5CpB,aAAa,CAACoC,MAAM,CAACT,EAAE,CAAC,CACrBd,IAAI,CAACC,QAAQ,IAAI;QAChBX,UAAU,CAACD,OAAO,CAACM,MAAM,CAACe,MAAM,IAAIA,MAAM,CAACI,EAAE,KAAKA,EAAE,CAAC,CAAC;MACxD,CAAC,CAAC;IACN;EACF,CAAC;;EAED;EACA;EACA;EACA,MAAMD,YAAY,GAAIC,EAAE,IAAK;IAC3B,MAAMJ,MAAM,GAAGrB,OAAO,CAACuB,IAAI,CAACF,MAAM,IAAIA,MAAM,CAACI,EAAE,KAAKA,EAAE,CAAC;IACvD,IAAIO,MAAM,CAACC,OAAO,CAAE,GAAEZ,MAAM,CAACH,IAAK,wEAAuE,CAAC,EAAE;MAC1G,MAAMiB,aAAa,GAAG;QAAEjB,IAAI,EAAEhB,OAAO;QAAEiB,MAAM,EAAEf;MAAU,CAAC;MAC1DN,aAAa,CAACsC,MAAM,CAACX,EAAE,EAAEU,aAAa,CAAC,CACpCxB,IAAI,CAACC,QAAQ,IAAI;QAChBX,UAAU,CAACD,OAAO,CAACqC,GAAG,CAAChB,MAAM,IAAIA,MAAM,CAACI,EAAE,KAAKA,EAAE,GAAGJ,MAAM,GAAGT,QAAQ,CAACC,IAAI,CAAC,CAAC;QAC5EV,UAAU,CAAC,EAAE,CAAC;QACdE,YAAY,CAAC,EAAE,CAAC;;QAEhB;QACAI,eAAe,CAAC;UACdmB,IAAI,EAAG,GAAEO,aAAa,CAACjB,IAAK,uBAAsB;UAClDW,IAAI,EAAE;QACR,CAAC,CAAC;QACFC,UAAU,CAAC,MAAM;UACfrB,eAAe,CAAC,IAAI,CAAC;QACvB,CAAC,EAAE,IAAI,CAAC;MACV,CAAC,CAAC,CACD6B,KAAK,CAACC,KAAK,IAAI;QACdpC,UAAU,CAAC,EAAE,CAAC;QACdE,YAAY,CAAC,EAAE,CAAC;QAChB;QACAI,eAAe,CAAC;UACdmB,IAAI,EAAG,GAAEO,aAAa,CAACjB,IAAK,sDAAqD;UACjFW,IAAI,EAAE;QACR,CAAC,CAAC;QACFC,UAAU,CAAC,MAAM;UACfrB,eAAe,CAAC,IAAI,CAAC;QACvB,CAAC,EAAE,IAAI,CAAC;MACV,CAAC,CAAC;IACN;EACF,CAAC;EAED,MAAM+B,gBAAgB,GAAIzB,KAAK,IAAK;IAClCZ,UAAU,CAACY,KAAK,CAAC0B,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMC,kBAAkB,GAAI5B,KAAK,IAAK;IACpCV,YAAY,CAACU,KAAK,CAAC0B,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;;EAED;EACA,MAAME,kBAAkB,GAAI7B,KAAK,IAAK;IACpCR,SAAS,CAACQ,KAAK,CAAC0B,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMG,eAAe,GAAG7C,OAAO,CAACM,MAAM,CAACe,MAAM,IAAIA,MAAM,CAACH,IAAI,CAACI,WAAW,EAAE,CAACwB,QAAQ,CAACxC,MAAM,CAACgB,WAAW,EAAE,CAAC,CAAC;EAG1G,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB,eAClB,QAAC,YAAY;MAAC,YAAY,EAAEd;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG,eAC5C,QAAC,MAAM;MAAC,MAAM,EAAEF,MAAO;MAAC,kBAAkB,EAAEsC;IAAmB;MAAA;MAAA;MAAA;IAAA,QAAG,yBAiBlE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,eAChB;MAAA,UACGC,eAAe,CAACR,GAAG,CAAChB,MAAM,iBAAI;QAAA,WAAsBA,MAAM,CAACH,IAAI,OAAGG,MAAM,CAACF,MAAM,eAC9E;UAAQ,OAAO,EAAE,MAAMY,YAAY,CAACV,MAAM,CAACI,EAAE,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAgB;MAAA,GAD1BJ,MAAM,CAACH,IAAI;QAAA;QAAA;QAAA;MAAA,QACmB;IAAC;MAAA;MAAA;MAAA;IAAA,QAClE;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAA,GA3IKnB,GAAG;AAAA,KAAHA,GAAG;AA6IT,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}